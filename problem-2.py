# -*- coding: utf-8 -*-
"""
Even Fibonacci numbers
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

----------------
Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих. Начиная с 1 и 2, первые 10 элементов будут:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.

"""
final_sum = 0


def if_even_lets_sum(number):
    global final_sum
    if number % 2 == 0:
        final_sum += number


def main():
    global final_sum
    max_value = 4000000
    fib1 = 1
    fib2 = 2
    while fib2 < max_value:
        if_even_lets_sum(fib1)
        if_even_lets_sum(fib2)
        fib2 += fib1
        fib1 = fib2 - fib1
    print(final_sum)

if __name__ == "__main__":
    main()